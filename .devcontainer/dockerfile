# Base Image.
FROM ubuntu:22.04

# Set working directory name. 
WORKDIR /repo

# Set up locales & non-interactive apt
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8

# Install linux tools. 
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        parallel \
        curl wget git vim bash gdebi-core \
        bzip2 ca-certificates unzip locales dos2unix \
        libxml2-dev libssl-dev libcurl4-openssl-dev \
        libhdf5-dev zlib1g-dev libgsl-dev fontconfig && \
    locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*

# Set environment variables for locale.
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Install Oh My Bash.
RUN bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)" && \
    echo 'OSH_THEME="powerline-multiline"' > ~/.oh-my-bash/custom/osh-theme.sh && \
    echo 'alias ll="ls -lah"' >> ~/.oh-my-bash/custom/aliases.sh

# Set Git user configuration.
RUN git config --global user.name "container" && \
    git config --global user.email "container@docker.com"

# Install quarto. 
RUN curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb
RUN gdebi --non-interactive quarto-linux-amd64.deb
RUN quarto install tinytex

# Install SRA toolkit. 
RUN wget --output-document sratoolkit.tar.gz https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-ubuntu64.tar.gz && \
    tar -vxzf sratoolkit.tar.gz && \
    mkdir -p /opt/sra-tools && \ 
    mv sratoolkit.* /opt/sra-tools
ENV PATH=/opt/sra-tools/sratoolkit.3.2.1-ubuntu64/bin:$PATH

# Install micromamba. 
ENV MAMBA_ROOT_PREFIX=/opt/micromamba
ENV PATH=$MAMBA_ROOT_PREFIX/bin:$PATH
RUN curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest \
  | tar -xvj -C /usr/local/bin --strip-components=1 bin/micromamba

# Build micromamba env from yaml. 
COPY micromamba_env.txt /tmp/micromamba_env.txt
RUN --mount=type=cache,target=${MAMBA_ROOT_PREFIX}/pkgs,sharing=locked,id=conda_cache \
    micromamba install -n base -y -f /tmp/micromamba_env.txt && \
    echo 'eval "$(micromamba shell hook --shell=bash)"' >> ~/.bashrc && \
    echo 'micromamba activate base' >> ~/.bashrc

# Install cmdstanr.
ENV TBB_CXX_TYPE=gcc
RUN Rscript -e "cmdstanr::install_cmdstan()"

# Resolves tidymodels incorrect time zone warning
RUN mkdir -p /var/db/timezone
RUN ln -sf /usr/share/zoneinfo/Etc/UTC /var/db/timezone/localtime

# Copy current directory. 
COPY . /repo/
