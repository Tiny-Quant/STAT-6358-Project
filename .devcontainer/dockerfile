# Base Image.
FROM bioconductor/bioconductor_docker:devel

# Set working directory name. 
WORKDIR /repo

# Install linux tools. 
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    build-essential git bash curl wget vim gdebi-core \
    r-base-dev libssl-dev libxml2-dev libcurl4-openssl-dev \
    parallel \
    bzip2 ca-certificates unzip locales && \ 
    locale-gen en_US.UTF-8 && \
    update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 && \ 
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* 

# Install Oh My Bash.
RUN bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)" && \
    echo 'OSH_THEME="powerline-multiline"' > ~/.oh-my-bash/custom/osh-theme.sh && \
    echo 'alias ll="ls -lah"' >> ~/.oh-my-bash/custom/aliases.sh

# Set Git user configuration.
RUN git config --global user.name "container" && \
    git config --global user.email "container@docker.com"

# Install miniconda. 
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p /opt/miniconda && \
    rm /tmp/miniconda.sh
ENV PATH=/opt/miniconda/bin:$PATH
RUN pip install --upgrade pip
RUN conda clean --all --yes && \
    conda init bash
RUN conda update libstdcxx-ng -c conda-forge
RUN conda install -c conda-forge radian

# Create conda environment for bioconda packages. 
COPY py_env.yml /tmp/py_env.yml
RUN conda env create -f /tmp/py_env.yml && \
    conda clean --all --yes && \ 
    conda init bash && \
    echo "source /opt/miniconda/etc/profile.d/conda.sh" > /etc/profile.d/conda_env.sh && \
    echo "conda activate stat6358" >> /etc/profile.d/conda_env.sh
ENV PATH=/opt/miniconda/envs/stat6358/bin:$PATH

# Install R packages
ENV PATH=/usr/local/bin:$PATH
COPY r-pkg-installer.r /tmp/r-pkg-install.r
RUN Rscript /tmp/r-pkg-install.r 

# Install quarto. 
RUN curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb
RUN gdebi --non-interactive quarto-linux-amd64.deb
RUN quarto install tinytex

# Install SRA toolkit. 
RUN wget --output-document sratoolkit.tar.gz https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-ubuntu64.tar.gz && \
    tar -vxzf sratoolkit.tar.gz && \
    mkdir -p /opt/sra-tools && \ 
    mv sratoolkit.* /opt/sra-tools
ENV PATH=/opt/sra-tools/sratoolkit.3.2.1-ubuntu64/bin:$PATH

# Set environment variables for locale
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Copy current directory. 
COPY . /repo/
